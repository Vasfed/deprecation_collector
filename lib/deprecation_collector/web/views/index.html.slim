header.mb-3
  h1 Deprecations

  a.btn.btn-primary>(data-method="post" href=deprecation_path(:trigger) rel="nofollow") Trigger a couple
  a.btn.btn-danger>(data-method="delete" data-confirm="Sure?" href=deprecation_path(:all) rel="nofollow")
    i.bi.bi-trash
    ' Delete all

  - if DeprecationCollector.instance.storage.support_disabling?
    - if DeprecationCollector.instance.storage.enabled?
      a.btn.btn-danger>(
        data-method="delete" href=disable_deprecations_path rel="nofollow"
        data-confirm="Sure? Will need to restart workers after enabling"
        ) Disable
    - else
      a.btn.btn-secondary>(
        data-method="post" href=enable_deprecations_path rel="nofollow"
      ) Turn on (after workers restart)

main
  table.table.table-striped
    tr
      th Count
      th Message
      th Location
      th Ruby/Rails

    - total = 0
    - by_realm = Hash.new(0)
    - deprecations.each do |deprecation|
      - total += 1
      - by_realm[deprecation[:realm]] += 1
      tr data-digest=deprecation[:digest]
        td
          a href=deprecation_path(deprecation[:digest]) = deprecation[:count]
          br
          - deprecation_tags(deprecation).each_pair do |tag, cls|
            .badge> class=cls = tag

        td
          ruby:
            msg = deprecation[:message].to_s
            delete_prefixes = Gem.path + [defined?(Rails) && Rails.root.to_s].compact
            delete_prefixes.each { |path| msg = msg.gsub(path, '') }
            msg.delete_prefix! deprecation[:gem_traceline].gsub(/:in .+/, ':') if deprecation[:gem_traceline]
            msg.delete_prefix! deprecation[:app_traceline].gsub(/:in .+/, ':') if deprecation[:app_traceline]
            msg.strip!
            msg.delete_prefix!("DEPRECATION WARNING: ")
            msg.delete_prefix!("warning: ")

          - if msg.lines.size > 2
            pre.pre-scrollable.p-1(style="overflow: auto; max-width: 700px; max-height: 200px; font-size: 11px")
              code = msg
          - else
            .msg = msg
          - if deprecation.dig(:notes, :comment)
            = deprecation.dig(:notes, :comment)

          - if deprecation.dig(:context, :action)
            i.small.controller = deprecation.dig(:context, :action)
          - elsif deprecation.dig(:context, :params, :controller)
            i.small.controller = deprecation.dig(:context, :params).slice(:controller, :action).values.join('#')

        td.small
          - if deprecation[:gem_traceline]
            .gem_location
              - location, function = deprecation[:gem_traceline].split(':in `', 2)
              - full_gemname = location.delete_prefix('/gems/').gsub(%r{/.*}, '')
              - location_in_gem = location.delete_prefix("/gems/#{full_gemname}/")
              i>= full_gemname
              code.code_location> data-copy-value=location_in_gem = location_in_gem.delete_prefix('lib/')
              i= function.delete_suffix("'")
          - if deprecation[:app_traceline]
            .app_location
              - location, function = deprecation[:app_traceline].split(':in `', 2)
              code.code_location>= location
              i= function.delete_suffix("'")
        td
          .small.ruby = deprecation[:ruby_version]
          .small.rails = deprecation[:rails_version]

          a href=deprecation_path(deprecation[:digest]) data-method="delete" data-confirm="Delete?" rel="nofollow" title="Delete"
            i.bi.bi-trash
    - if total.zero?
      tr
        td colspan=4
          p Looks like there're no deprecations (or workers have not yet wrote to redis)
          p
            ' You can try
            a href=deprecation_path(:trigger) data-method="post" rel="nofollow" trigger a couple
            - if import_enabled?
              |> , or
              a> href=import_deprecations_path import


footer
  - if total > 3
    => total
    ' deprecations
  - by_realm.each_pair do |realm, count|
    a.btn.btn-sm.btn-outline-secondary> href="?realm=#{realm}"
      => realm
      .badge> class=(count == 0 ? 'bg-success' : 'bg-secondary') = count
  - if params[:realm] && params[:realm] != ''
    a.btn.btn-sm.btn-outline-primary> href="?realm="
      ' Other realms    

css:
  .code_location {
    cursor: pointer;
  }

javascript:
  document.querySelectorAll('.code_location').forEach(function(elem){
    elem.addEventListener('click', function () {
      let textToCopy = elem.getAttribute('data-copy-value');
      if(!textToCopy) textToCopy = elem.innerText;
      console.log("Copying", textToCopy)
      navigator.clipboard.writeText(textToCopy);
    }, false);
  });
